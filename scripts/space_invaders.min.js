"use strict";(()=>{let canFire=!0,gameStarted=!1,gameOver=!1,numberOfEnemies=0,destroyedEnemies=0,shotsFired=0,shipSpeed=1,horizontalDirection=1,justMovedDown=!1,playerLaserInterval=175,cantFireInterval=550,upgradedLaser=!1,hitsInARow=0;const playerWinsOnLoad=Number(window.getCookie("playerWinsSpace")),playerLossesOnLoad=Number(window.getCookie("playerLossesSpace")),clockSpeed=375,playerLaserIterations=28,tickMovement=25,imageStore=["images/enemy-4.png","images/enemy-2.png","images/enemy-3.png","images/enemy-1.png"],ship=document.getElementById("ship"),gameBoard=document.getElementById("gameBoard"),enemyShips=()=>Array.from(document.getElementsByClassName("enemyShip")),convertToPXs=num=>num+"px";function shipControl(e){if(gameStarted&&!gameOver){const posLeft=ship.offsetLeft-gameBoard.offsetLeft-1;"37"==e.keyCode&&posLeft-25>=0?(e.preventDefault(),ship.style.marginLeft=convertToPXs(posLeft-25)):"39"==e.keyCode&&posLeft+25<=gameBoard.offsetWidth-100?(e.preventDefault(),ship.style.marginLeft=convertToPXs(posLeft+25)):"32"==e.keyCode&&canFire&&(e.preventDefault(),shotsFired++,canFire=!1,window.sleep(cantFireInterval).then(()=>{canFire=!0}),firePlayerLaser())}}const colides=(obj1,obj2)=>!(obj2.offsetLeft>obj1.offsetWidth+obj1.offsetLeft||obj1.offsetLeft>obj2.offsetWidth+obj2.offsetLeft||obj2.offsetTop>obj1.offsetHeight+obj1.offsetTop||obj1.offsetTop>obj2.offsetHeight+obj2.offsetTop);function firePlayerLaser(){const laser=document.createElement("div");laser.classList.add("laser"),laser.style.left=convertToPXs(ship.offsetLeft+45),laser.style.top=convertToPXs(ship.offsetTop-30),ship.appendChild(laser);for(let i=0;i<28;i++)window.sleep(i*playerLaserInterval).then(()=>{laser.style.top=convertToPXs(ship.offsetTop-50-25*i),enemyShips().forEach(es=>{colides(es,laser)&&(laser.remove(),es.remove(),destroyedEnemies++,hitsInARow++,destroyedEnemies===numberOfEnemies&&(gameOverHandler("You Win!"),window.setCookie("playerWinsSpace",playerWinsOnLoad+1,10),document.getElementById("playerWins").innerText="Wins: "+(playerWinsOnLoad+1),document.getElementById("myCanvas").style.display="block"))})});window.sleep(28*playerLaserInterval).then(()=>{laser.parentElement&&(hitsInARow=0,laser.remove())})}function fireComputerLaser(shouldReFire){if(!gameOver){const laser=document.createElement("div");laser.classList.add("enemyLaser");const cell=enemyShips()[window.randomIntFromInterval(0,enemyShips().length-1)].attributes.currentCell.value;document.getElementById("cell-"+cell).appendChild(laser),moveComputerLaser(laser,shouldReFire)}}function moveComputerLaser(laser,shouldReFire){colides(ship,laser)?(ship.remove(),laser.remove(),gameOverHandler("You Lose!"),window.setCookie("playerLossesSpace",playerLossesOnLoad+1,10),document.getElementById("playerLosses").innerText="Losses: "+(playerLossesOnLoad+1)):laser.offsetTop>=ship.offsetTop?(laser.remove(),shouldReFire&&!gameOver&&window.sleep(window.randomIntFromInterval(350,550)).then(()=>{fireComputerLaser(shouldReFire)})):window.sleep(200).then(()=>{laser.style.marginTop=convertToPXs(Number(laser.style.marginTop.substring(0,laser.style.marginTop.length-2))+25),moveComputerLaser(laser,shouldReFire)})}function startGame(){gameStarted||(window.modal("Start!",1500),window.sleep(1500).then(()=>{gameStarted=!0,gameTick(),fireComputerLaser(!0)}))}function lossChecker(){enemyShips().some(es=>colides(es,ship)||"30"===es.attributes.currentCell.value.split("-")[0])&&(gameOverHandler("You Lose!"),window.setCookie("playerLossesSpace",playerLossesOnLoad+1,10),document.getElementById("playerLosses").innerText="Losses: "+(playerLossesOnLoad+1))}function gameOverHandler(message){gameOver=!0,window.modal(message,2e3),Array.from(document.getElementsByClassName("laser")).forEach(l=>l.remove()),Array.from(document.getElementsByClassName("enemyLaser")).forEach(l=>l.remove()),shotsFired>0&&(document.getElementById("shotsFired").innerText="Shots Fired: "+shotsFired,document.getElementById("accuracy").innerText="Accuracy: "+Math.floor(destroyedEnemies/shotsFired*100)+"%")}function upgradeTextControl(message){const upgradeText=document.getElementById("upgradeText");upgradeText.innerText=message,upgradeText.classList.add("flash"),window.sleep(4950).then(()=>{upgradeText.classList.remove("flash"),upgradeText.innerText=""})}function gameTick(){gameOver||(enemiesInColumn("0")&&!justMovedDown?moveDownHelper(1):enemiesInColumn("46")&&!justMovedDown?moveDownHelper(-1):(moveEnemyShips("hor",horizontalDirection),justMovedDown=!1),15===window.randomIntFromInterval(1,15)&&fireComputerLaser(!1),(10===shotsFired||20===shotsFired)&&destroyedEnemies/shotsFired>.65&&!upgradedLaser&&(upgradeTextControl("Laser Upgraded!"),cantFireInterval=500,playerLaserInterval=150,upgradedLaser=!0),10===hitsInARow&&(upgradeTextControl("Enemies Retreat!"),moveEnemyShips("ver",-1),hitsInARow=0),lossChecker(),gameOver||window.sleep(375-16*shipSpeed).then(()=>gameTick()))}const enemiesInColumn=col=>enemyShips().some(es=>es.attributes.currentCell.value.split("-")[1]===col),moveDownHelper=newHorizontalDirection=>{moveEnemyShips("ver",1),justMovedDown=!0,shipSpeed++,horizontalDirection=newHorizontalDirection};function moveEnemyShips(direction,distance){enemyShips().forEach(es=>{const row=Number(es.attributes.currentCell.value.split("-")[0]),col=Number(es.attributes.currentCell.value.split("-")[1]),ship=es.parentElement.removeChild(es),newCell="hor"===direction?row+"-"+(col+distance):row+distance+"-"+col;ship.attributes.currentCell.value=newCell,document.getElementById("cell-"+newCell).appendChild(ship)})}(()=>{const enemies=document.getElementById("enemies");for(let i=0;i<32;i++){const shipRow=document.createElement("div");enemies.appendChild(shipRow),shipRow.classList.add("ship-row"),shipRow.id="row-"+i;for(let j=0;j<50;j++){const shipCell=document.createElement("div");shipRow.appendChild(shipCell),shipCell.classList.add("ship-cell"),shipCell.id="cell-"+i+"-"+j}}for(let i=1;i<5;i++){const shipImgToUse=imageStore[i-1];for(let j=1;j<8;j++){const enemyShip=document.createElement("div"),shipImg=document.createElement("img");shipImg.src=shipImgToUse,shipImg.classList.add("enemyShipImg"),enemyShip.appendChild(shipImg),enemyShip.classList.add("enemyShip"),document.getElementById("cell-"+3*i+"-"+6*j).appendChild(enemyShip),enemyShip.setAttribute("currentCell",3*i+"-"+6*j),numberOfEnemies++}}document.addEventListener("keydown",shipControl),document.getElementById("start").addEventListener("click",startGame),document.getElementById("reload").addEventListener("click",()=>location.reload()),document.getElementById("playerWins").innerText="Wins: "+playerWinsOnLoad,document.getElementById("playerLosses").innerText="Losses: "+playerLossesOnLoad})()})();