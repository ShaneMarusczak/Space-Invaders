"use strict";(()=>{let canFire=!0,gameStarted=!1,gameOver=!1,numberOfEnemies=0,destroyedEnemies=0,shotsFired=0,shipSpeed=1;const height=25,ship=document.getElementById("ship"),gameBoard=document.getElementById("gameBoard"),enemyShips=()=>Array.from(document.getElementsByClassName("enemyShip")),convertToPXs=num=>num+"px";function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min)}function alertModalControl(message,duration){document.getElementById("alertshader").style.display="block",document.getElementById("alertmessage").innerText=message,sleep(duration).then(()=>{document.getElementById("alertshader").style.display="none"})}function sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms))}function shipControl(e){if(gameStarted&&!gameOver){const posLeft=ship.offsetLeft-gameBoard.offsetLeft-1;if("37"==e.keyCode&&posLeft-25>=0)e.preventDefault(),ship.style.marginLeft=convertToPXs(posLeft-25);else if("39"==e.keyCode&&posLeft+25<=gameBoard.offsetWidth-100)e.preventDefault(),ship.style.marginLeft=convertToPXs(posLeft+25);else if("32"==e.keyCode&&canFire){e.preventDefault(),shotsFired++,canFire=!1,sleep(550).then(()=>{canFire=!0});const laser=document.createElement("div");laser.classList.add("laser"),laser.style.left=convertToPXs(ship.offsetLeft+45),laser.style.top=convertToPXs(ship.offsetTop-30),ship.appendChild(laser),firePlayerLaser(laser,ship)}}}function colides(obj1,obj2){return!(obj2.offsetLeft>obj1.offsetWidth+obj1.offsetLeft||obj1.offsetLeft>obj2.offsetWidth+obj2.offsetLeft||obj2.offsetTop>obj1.offsetHeight+obj1.offsetTop||obj1.offsetTop>obj2.offsetHeight+obj2.offsetTop)}function gameOverHandler(message){gameOver=!0,alertModalControl(message,2e3),Array.from(document.getElementsByClassName("laser")).forEach(l=>l.remove()),Array.from(document.getElementsByClassName("enemyLaser")).forEach(l=>l.remove()),document.getElementById("shotsFired").innerText="Shots Fired: "+shotsFired,document.getElementById("accuracy").innerText="Accuracy: "+Math.floor(destroyedEnemies/shotsFired*100)+"%"}function firePlayerLaser(laser,ship){const interval=175,iterations=28;for(let i=0;i<28;i++)sleep(175*i).then(()=>{laser.style.top=convertToPXs(ship.offsetTop-50-25*i),enemyShips().forEach(es=>{colides(es,laser)&&(laser.remove(),es.remove(),destroyedEnemies++,destroyedEnemies===numberOfEnemies&&gameOverHandler("You Win!"))})});sleep(4900).then(()=>laser.remove())}function fireComputerLaser(shouldReFire){const laser=document.createElement("div");laser.classList.add("enemyLaser");const shipToFire=enemyShips()[randomIntFromInterval(0,enemyShips().length-1)];document.getElementById("enemies").appendChild(laser),laser.style.left=convertToPXs(Number(shipToFire.style.left.substring(0,shipToFire.style.left.length-2))+Number(shipToFire.style.marginLeft.substring(0,shipToFire.style.marginLeft.length-2))),laser.style.top=convertToPXs(Number(shipToFire.style.top.substring(0,shipToFire.style.top.length-2))+Number(shipToFire.style.marginTop.substring(0,shipToFire.style.marginTop.length-2))),moveComputerLaser(laser,shouldReFire)}function moveComputerLaser(laser,shouldReFire){colides(ship,laser)?(ship.remove(),laser.remove(),gameOverHandler("You Lose!")):laser.offsetTop>=ship.offsetTop?(laser.remove(),shouldReFire&&!gameOver&&sleep(randomIntFromInterval(350,550)).then(()=>{fireComputerLaser(shouldReFire)})):sleep(200).then(()=>{laser.style.marginTop=convertToPXs(Number(laser.style.marginTop.substring(0,laser.style.marginTop.length-2))+25),moveComputerLaser(laser,shouldReFire)})}function startGame(){gameStarted||(alertModalControl("Start!",1500),gameStarted=!0,sleep(1500).then(()=>{moveEnemyShipsRight(),fireComputerLaser(!0)}))}function moveEnemyShipsDown(){4===randomIntFromInterval(0,4)&&fireComputerLaser(!1),shipSpeed++,enemyShips().forEach(es=>{es.style.marginTop=convertToPXs(Number(es.style.marginTop.substring(0,es.style.marginTop.length-2))+25)})}const gameBoardRightSide=gameBoard.offsetWidth+gameBoard.offsetLeft;function lossChecker(){enemyShips().some(es=>es.offsetTop+30>=ship.offsetTop)&&gameOverHandler("You Lose!")}function moveEnemyShipsRight(){if(!gameOver){if(enemyShips().some(es=>es.offsetLeft+25+75>=gameBoardRightSide))return moveEnemyShipsDown(),lossChecker(),void sleep(375-14*shipSpeed).then(moveEnemyShipsLeft);enemyShips().forEach(es=>{es.style.marginLeft=convertToPXs(Number(es.style.marginLeft.substring(0,es.style.marginLeft.length-2))+25)}),sleep(375-14*shipSpeed).then(moveEnemyShipsRight)}}function moveEnemyShipsLeft(){if(!gameOver){if(enemyShips().some(es=>es.offsetLeft-25<=gameBoard.offsetLeft))return moveEnemyShipsDown(),lossChecker(),void sleep(375-14*shipSpeed).then(moveEnemyShipsRight);enemyShips().forEach(es=>{es.style.marginLeft=convertToPXs(Number(es.style.marginLeft.substring(0,es.style.marginLeft.length-2))-25)}),sleep(375-14*shipSpeed).then(moveEnemyShipsLeft)}}const imageStore=["images/enemy-4.png","images/enemy-2.png","images/enemy-3.png","images/enemy-1.png"];(()=>{for(let i=1;i<5;i++){const shipImgToUse=imageStore[i-1];for(let j=1;j<8;j++){const enemyShip=document.createElement("div"),shipImg=document.createElement("img");shipImg.src=shipImgToUse,shipImg.classList.add("enemyShipImg"),enemyShip.appendChild(shipImg),enemyShip.classList.add("enemyShip"),enemyShip.style.top=convertToPXs(60*i+document.getElementById("gameBoard").offsetTop),enemyShip.style.left=convertToPXs(120*j+document.getElementById("gameBoard").offsetLeft),document.getElementById("enemies").appendChild(enemyShip),numberOfEnemies++}}document.addEventListener("keydown",shipControl),document.getElementById("start").addEventListener("click",startGame),document.getElementById("reload").addEventListener("click",()=>location.reload())})()})();